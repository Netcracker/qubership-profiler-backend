#user root;
worker_processes auto;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    server {
        listen 8080;
        listen [::]:8080;
        server_name  _;
        # access_log  /var/log/nginx/access.log main; # for debugging
        client_max_body_size 10G;

        location / {
            autoindex on;
            root /usr/share/docroot/;
        }

# will be enabled only if we have DIAG_PV_MOUNT_PATH
###        location /esc {
###            proxy_pass http://localhost:8000;
###        }

###        location /cdt {
###            proxy_pass http://localhost:8000;
###        }

        location /diagnostic {
            TO_BE_REPLACED_WITH_DIAGNOSTIC_TARGET_CONFIG
            client_max_body_size 10G;
            proxy_read_timeout 120;
            limit_except PUT {
            }
        }

        location /api/v1/profiler/agent/updates {
            alias /usr/share/docroot/api/v1/diagnostic/agent/installer.zip;
        }

        location /api/v1/diagnostic/agent/updates {
            alias /usr/share/docroot/api/v1/diagnostic/agent/installer.zip;
        }

        location /api/v1/profiler/tools {
            alias /usr/share/docroot/api/v1/diagnostic/tools;
        }

        location /health {
            access_log off;
            # default_type application/json;
            return 200 '{"status":"UP"}';
        }

        location /probes/live {
            access_log off;
            # default_type application/json;
            return 200 '{"status":"UP"}';
        }

        location /probes/ready {
            access_log off;
            # default_type application/json;
            return 200 '{"status":"UP"}';
        }
    }
}
